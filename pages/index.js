import { useEffect, useState } from 'react'
import { Accordion, AccordionDetails, AccordionSummary, Box, Button, Card, Checkbox, Divider, Typography } from '@mui/material'
import Head from 'next/head'
import api from '../config/api'
import styles from '../styles/Home.module.css'
import KeyboardArrowDownRoundedIcon from '@mui/icons-material/KeyboardArrowDownRounded'
import SubCategory from '../components/SubCategory'

export default function Home({ data }) {

    const [showCategoryList, setShowCategoryList] = useState(true)
    const [showBrandList, setShowBrandList] = useState(false)
    const [categories, setCategories] = useState([])
    const [brands, setBrands] = useState([])
    const [selectedCategory, setSelectedCategory] = useState('')
    const [selectedSubCategory, setSelectedSubCategory] = useState('')
    const [selectedBrand, setSelectedBrand] = useState('')

    useEffect(() => {
        setCategories(data.searchFilter.categories)
        setBrands(data.searchFilter.brands)
    }, [])

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Box width='100vw' height='100vh' display='flex' alignItems='center' justifyContent='center'>

                {/* Card */}
                <Card sx={{ width: '300px' }}>

                    {/* Categories Section */}
                    <Box>
                        <Accordion expanded={showCategoryList}>

                            {/* Accordion Heading */}
                            <AccordionSummary
                                expandIcon={
                                    <KeyboardArrowDownRoundedIcon onClick={() => setShowCategoryList(!showCategoryList)} />
                                }
                            >
                                Categories
                            </AccordionSummary>

                            {/* Accordion Content */}
                            <AccordionDetails>
                                {
                                    categories.map(category => (
                                        <SubCategory
                                            key={category.ID}
                                            category={category}
                                            setSelectedCategory={setSelectedCategory}
                                            setSelectedSubCategory={setSelectedSubCategory}
                                        />
                                    ))
                                }
                            </AccordionDetails>
                        </Accordion>
                    </Box>

                    {/* Divider */}
                    <Divider />

                    {/* Brands Section */}
                    <Box>
                        <Accordion expanded={showBrandList}>

                            {/* Accordion Heading */}
                            <AccordionSummary
                                expandIcon={
                                    <KeyboardArrowDownRoundedIcon onClick={() => setShowBrandList(!showBrandList)} />
                                }
                            >
                                Brands
                            </AccordionSummary>

                            {/* Accordion Content */}
                            <AccordionDetails>
                                {
                                    brands.map(brand => (
                                        <Box key={brand.ID} display='flex' alignItems='center'>
                                            <Checkbox
                                                checked={selectedBrand === brand.ID}
                                                onChange={() => {
                                                    setSelectedBrand(brand.ID)
                                                }}
                                            />
                                            <Typography>{brand.name}</Typography>
                                        </Box>
                                    ))
                                }
                            </AccordionDetails>
                        </Accordion>
                    </Box>

                    {/* Apply Filter Button */}
                    <Button>
                        Apply Filter
                    </Button>
                </Card>

            </Box>
        </div>
    )
}

export async function getServerSideProps() {

    let data
    try {
        const response = await api.get('filters')
        data = response.data
    } catch (error) {

    }


    return {
        props: {
            data
        },
    }
}
